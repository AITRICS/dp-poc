[project]
name = "dp-poc"
version = "0.1.0"
requires-python = ">=3.12"
dependencies = [
    "polars>=1.33.1",
    "pydantic>=2.11.9",
]

[tool.uv]
# 가상환경 경로 설정 (기본값은 .venv)
# managed = true  # uv가 가상환경을 관리하도록 설정
# venv = ".venv"  # 가상환경 디렉토리 이름

[project.optional-dependencies]
dev = [
    "mypy>=1.13.0",
    "ruff>=0.8.0",
    "isort>=5.13.0",
    "pre-commit>=4.0.0",
]

[tool.mypy]
python_version = "3.12"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
follow_imports = "normal"
ignore_missing_imports = false

[tool.ruff]
target-version = "py312"
line-length = 100

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "N",   # pep8-naming
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
]
ignore = [
    "E501",  # line too long (handled by formatter)
    "UP046", # Generic class uses Generic subclass (keep for Python 3.11 compatibility)
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # unused imports in __init__.py

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip_gitignore = true
